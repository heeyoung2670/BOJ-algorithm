//동전 분배
//dp, 그리디
#include <iostream>
#include <vector>
#include <cstring>

using namespace std;

int main() {

	int N;
	int coin, cnt, sum;
	vector<pair<int, int>> v;
	int dp[50001];

	for (int t = 0; t < 3; t++) {
		//테스트 케이스마다 초기화
		sum = 0;
		v.clear();
		memset(dp, 0, sizeof(dp));

		cin >> N;
		for (int i = 0; i < N; i++) {
			cin >> coin >> cnt;
			v.push_back({ coin, cnt });
			sum += coin * cnt; //모든 동전의 총 합
		}

		if (sum % 2 == 1) { //합이 홀수인 경우 어떤 식으로 나눠도 홀/짝으로 나눠짐
			cout << 0 << "\n";
			continue;
		}
		
		dp[0] = 1;
		for (int i = 0; i < N; i++) {
			for (int j = 50000; j >= v[i].first; j--) { //100000의 절반
				if (dp[j - v[i].first] == 1) {
					for (int k = 0; k < v[i].second && j + k * v[i].first <= 50000; k++) {
						dp[j + k * v[i].first] = 1; //[]안의 수를 만들 수 있으면 1 저장
					}
				}
			}
		}

		cout << dp[sum/2] << "\n";

	}

	return 0;
}
