//내려가기
//다이나믹 프로그래밍
#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

int N;
int input;

int max_temp1, max_temp2, max_temp3;
int min_temp1, min_temp2, min_temp3;

int max_answer = 0, min_answer = 1000000;

int max_dp[3] = { 0, 0, 0 }; //무조건 숫자가 세 개씩 주어짐
int min_dp[3] = { 0, 0, 0 };

int main() {

	ios_base::sync_with_stdio(0);
	cin.tie(0);

	cin >> N;

	while (N--)
	{
		//값을 미리 저장 후 갱신
		max_temp1 = max(max_dp[0], max_dp[1]);
		max_temp2 = max(max(max_dp[0], max_dp[1]), max_dp[2]);
		max_temp3 = max(max_dp[1], max_dp[2]);

		min_temp1 = min(min_dp[0], min_dp[1]);
		min_temp2 = min(min(min_dp[0], min_dp[1]), min_dp[2]);
		min_temp3 = min(min_dp[1], min_dp[2]);

		for (int i = 0; i < 3; i++) {
			cin >> input;

			if (i == 0) {
				max_dp[i] = max_temp1 + input;
				min_dp[i] = min_temp1 + input;
			}
			else if (i == 1) {
				max_dp[i] = max_temp2 + input;
				min_dp[i] = min_temp2 + input;
			}
			else {
				max_dp[i] = max_temp3 + input;
				min_dp[i] = min_temp3 + input;
			}

		}
	}
	
	//최종적으로 최대, 최소 점수 찾아줌
	for (int i = 0; i < 3; i++) {
		max_answer = max(max_answer, max_dp[i]);
		min_answer = min(min_answer, min_dp[i]);
	}

	printf("%d %d\n", max_answer, min_answer);

	return 0;
}
