# 컨베이어 벨트 위의 로봇
# 회전을 while문으로 직접 구현하니 시간초과
# deque는 rotate 함수를 사용할 수 있음 -> 회전한 객체를 반환
from collections import deque

N, K = map(int, input().split())
belt = deque(list(map(int, input().split())))

cnt = 0
IN, OUT = 0, N-1
robot = deque([0]*N)
while True:
    if belt.count(0) >= K:
        print(cnt)
        break
    # 단계 증가
    cnt += 1
    # 벨트 이동
    belt.rotate(1)
    robot.rotate(1)
    robot[OUT] = 0 # 벨트가 이동하며 로봇이 떨어짐
    # 로봇 이동
    for j in range(len(robot)-1, 0, -1):
        if robot[j-1] == 1:
            if robot[j] == 0 and belt[j] > 0:
                robot[j] = robot[j-1]
                robot[j-1] = 0
                belt[j] -= 1
    # 로봇 IN & OUT
    if robot[IN] == 0 and belt[IN] > 0:
        robot[IN] = 1
        belt[IN] -= 1
    if robot[OUT] == 1:
        robot[OUT] = 0
