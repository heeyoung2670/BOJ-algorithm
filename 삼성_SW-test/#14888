# 연산자 끼워넣기
# dfs, 백트래킹
def dfs(cnt, res, add, sub, mul, div):
    global res_min
    global res_max
    if cnt == N:
        res_min = min(res_min, res)
        res_max = max(res_max, res)
    else:
        if add:
            dfs(cnt+1, res+numbers[cnt], add-1, sub, mul, div)
        if sub:
            dfs(cnt+1, res-numbers[cnt], add, sub-1, mul, div)
        if mul:
            dfs(cnt+1, res*numbers[cnt], add, sub, mul-1, div)
        if div:
            dfs(cnt+1, int(res/numbers[cnt]), add, sub, mul, div-1)

N = int(input())
numbers = list(map(int, input().split()))
add, sub, mul, div = map(int, input().split())

res_max, res_min = -1000000000, 1000000000

dfs(1, numbers[0], add, sub, mul, div)
print(res_max)
print(res_min)
