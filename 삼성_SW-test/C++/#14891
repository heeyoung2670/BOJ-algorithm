//톱니바퀴
//구현
#include <iostream>
#include <deque>
#include <string>
#include <cstring>

using namespace std;

string gear;
deque<char> Gear[4];
int K;
int num, dir; //회전시킨 톱니바퀴의 번호, 방향
int rotation[4];
bool check[3];
int answer = 0;

void rotate(int num, int dir) {
	
	rotation[num] = dir;
	
	if (num + 1 <= 3 && rotation[num + 1] == 0) {
		if(check[num]) rotate(num + 1, -dir);
	}
	if (num - 1 >= 0 && rotation[num - 1] == 0) {
		if (check[num - 1]) rotate(num - 1, -dir);
	}

}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	for (int i = 0; i < 4; i++) {
		cin >> gear;
		for (int j = 0; j < 8; j++) {
			Gear[i].push_back(gear[j]);
		}
	}
	
	//톱니바퀴 회전 구현
	cin >> K;
	while (K--)
	{
		cin >> num >> dir;

		memset(rotation, 0, sizeof(rotation));
		memset(check, false, sizeof(check));

		//맞닿은 극 확인
		if (Gear[0][2] != Gear[1][6]) check[0] = true;
		if (Gear[1][2] != Gear[2][6]) check[1] = true;
		if (Gear[2][2] != Gear[3][6]) check[2] = true;

		rotate(num - 1, dir);

		for (int i = 0; i < 4; i++) {
			if (rotation[i] == 1) {
				Gear[i].push_front(Gear[i].back());
				Gear[i].pop_back();
			}
			else if (rotation[i] == -1) {
				Gear[i].push_back(Gear[i].front());
				Gear[i].pop_front();
			}
		}
	}

	//점수계산
	int mul = 1;
	for (int i = 0; i < 4; i++) {
		answer += mul * (Gear[i].front() - '0');
		mul *= 2;
	}

	cout << answer << "\n";

	return 0;
}
