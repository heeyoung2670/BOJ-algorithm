//컨베이어 벨트 위의 로봇
//구현
#include <iostream>
#include <deque>

using namespace std;

int N, K;
int num;
deque<int> belt;
deque<bool> robot;

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	cin >> N >> K;
	for (int i = 0; i < 2 * N; i++) {
		cin >> num;
		belt.push_back(num); //벨트 내구도 저장
		robot.push_back(false); //로봇 위치 저장
	}

	int answer = 0;
	while (true)
	{
		int cnt = 0;
		for (int i = 0; i < 2 * N; i++) {
			if (belt[i] == 0) cnt++;
		}
		if (cnt >= K) break;

		//단계 증가
		answer++;

		//1. 벨트 한 칸 회전
		belt.push_front(belt.back());
		belt.pop_back();
		robot.push_front(robot.back());
		robot.pop_back();
		robot[N - 1] = false; //벨트가 이동하며 로봇 OUT

		//2. 로봇 이동
		for (int i = N - 2; i >= 0; i--) {
			if (robot[i] && belt[i+1] > 0 && !robot[i+1]) {
				robot[i] = false;
				robot[i + 1] = true;
				belt[i + 1]--;
			}
		}
		if (robot[N - 1]) robot[N - 1] = false; //이동한 로봇이 내리는 위치에 왔다면 로봇 OUT

		//3. 로봇 IN
		if (belt[0] > 0) {
			robot[0] = true;
			belt[0]--;
		}
	}

	printf("%d\n", answer);

	return 0;
}
