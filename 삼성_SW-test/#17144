# 미세먼지 안녕!
# 구현, 시뮬레이션
# 미세먼지가 퍼지는 부분은 bfs로 구현, 공기 청정기는 아래/위 나눠서 while문으로 구현
# python3는 시간초과, pypy3는 통과
from collections import deque
import copy

R, C, T = map(int, input().split())
data = [list(map(int, input().split())) for _ in range(R)]

dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]
def bfs():
    temp = copy.deepcopy(data)
    while queue:
        x, y = queue.popleft()
        dust = data[x][y]
        cnt = 0
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            if 0 <= nx < R and 0 <= ny < C:
                if data[nx][ny] != -1:
                    temp[nx][ny] += dust//5
                    cnt += 1
        temp[x][y] -= (dust//5)*cnt
    return temp

def clean(x, y, idx):
    if idx == 0:
        temp[x][y] = 0
        while y < C-1:
            temp[x][y+1] = data[x][y]
            y += 1
        while 0 < x:
            temp[x-1][y] = data[x][y]
            x -= 1
        while 0 < y:
            temp[x][y-1] = data[x][y]
            y -= 1
        while True:
            if data[x+1][y] == -1:
                break
            else:
                temp[x+1][y] = data[x][y]
            x += 1
    elif idx == 1:
        temp[x][y] = 0
        while y < C - 1:
            temp[x][y + 1] = data[x][y]
            y += 1
        while x < R-1:
            temp[x + 1][y] = data[x][y]
            x += 1
        while 0 < y:
            temp[x][y - 1] = data[x][y]
            y -= 1
        while True:
            if data[x -1][y] == -1:
                break
            else:
                temp[x - 1][y] = data[x][y]
            x -= 1

air_clean = []
for _ in range(T):
    queue = deque()
    # 미세먼지 동시에 퍼짐
    for i in range(R):
        for j in range(C):
            if data[i][j] > 0:
                queue.append((i, j))
            elif data[i][j] == -1:
                air_clean.append((i, j))
    data = bfs()
    # 공기 청정기 작동
    temp = copy.deepcopy(data)
    for idx, (x, y) in enumerate(air_clean):
        clean(x, y+1, idx)
    data = temp

print(sum(sum(d) for d in data) + 2)
