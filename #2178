# 미로 탐색
# 최단 경로는 bfs 사용
import sys
from collections import deque
input = sys.stdin.readline

N, M = map(int, input().split())
data = []
for _ in range(N):
    data.append(list(input().rstrip()))
visited = [[0]*M for _ in range(N)]

dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]

def bfs (x, y):
    queue = deque()
    queue.append((x, y))
    visited[x][y] = 1
    while queue:
        x, y = queue.popleft()
        if x == N-1 and y == M-1:
            print(visited[x][y])
            break
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            if nx < 0 or nx >= N or ny < 0 or ny >= M:
                continue
            if data[nx][ny] == '1' and visited[nx][ny] == 0:
                visited[nx][ny] = visited[x][y] + 1
                queue.append((nx, ny))
bfs(0, 0)
