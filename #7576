# 토마토
# bfs, 동시에 진행해야하는 것 -> 미리 queue.append 해놓고 bfs 함수 실행
import sys
from collections import deque
input = sys.stdin.readline

M, N = map(int, input().split())
tomatos = []
for _ in range(N):
    tomatos.append(list(map(int, input().split())))

dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]
queue = deque()

def bfs():
    while queue:
        x, y = queue.popleft()
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            if nx < 0 or nx >= N or ny < 0 or ny >= M:
                continue
            if tomatos[nx][ny] == -1:
                continue
            if tomatos[nx][ny] == 0:
                tomatos[nx][ny] = tomatos[x][y] + 1
                queue.append((nx, ny))

for i in range(N):
    for j in range(M):
        if tomatos[i][j] == 1:
            queue.append((i, j))
bfs()
day = 0
day_con = True
for tomato in tomatos:
    for t in tomato:
        if t == 0:
            day_con = False
        day = max(day, t)
if day_con == False:
    print(-1)
else:
    print(day - 1)
