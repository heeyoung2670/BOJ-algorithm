//키 순서
//플로이드-와샬 : 모든 정점에서 모든 정점으로의 최단 경로
#include <iostream>
#include <vector>

using namespace std;

#define INF 987654321

int N, M;
int a, b;
int map[501][501];
int answer = 0;

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	cin >> N >> M;

	//자기자신 초기화
	for (int i = 1; i <= N; i++) {
		for (int j = 1; j <= N; j++) {
			if(i == j) map[i][j] = 0;
			else map[i][j] = INF;
		}
	}

	while(M--){
		cin >> a >> b;
		map[a][b] = 1; //그래프 입력
	}

	//플로이드-와샬
	for (int k = 1; k <= N; k++) { //거쳐가는 노드
		for (int i = 1; i <= N; i++) { //출발 노드
			for (int j = 1; j <= N; j++) { //도착 노드
				if (map[i][k] + map[k][j] < map[i][j]) {
					map[i][j] = map[i][k] + map[k][j];
				}
			}
		}
	}

	for (int i = 1; i <= N; i++) {
		bool check = true; //학생마다 체크
		for (int j = 1; j <= N; j++) { 
			if (i == j) continue; //본인 제외
			//map[i][j]는 i보다 j가 키가 크다. map[j][i]는 i보다 j가 키가 작다.
			if (map[i][j] == INF && map[j][i] == INF) { //둘 다 INF라면 i, j의 키 순서를 알 수 없는 경우
				check = false;
				break;
			}
		}
		if (check) answer++;
	}

	cout << answer << "\n";

	return 0;
}
