// 정수 삼각형
// dp
#include <iostream>
#include <cstring>
#include <algorithm>

#define MAXN 501

using namespace std;

int n, answer;
int dp[MAXN][MAXN];

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	cin >> n;
	memset(dp, 0, sizeof(dp));
	answer = 0;

	for (int i = 0; i < n; i++) {
		for (int j = 0; j <= i; j++) {
			cin >> dp[i][j];
		}
	}

	for (int i = 1; i < n; i++) {
		for (int j = 0; j <= i; j++) {
			if (j == 0) dp[i][j] = dp[i - 1][0] + dp[i][j];
			else if (j == i) dp[i][j] = dp[i - 1][j - 1] + dp[i][j];
			else dp[i][j] = max(dp[i - 1][j - 1] + dp[i][j], dp[i - 1][j] + dp[i][j]);
		}
	}

	for (int j = 0; j < n; j++) {
		answer = max(answer, dp[n-1][j]);
	}

	cout << answer << endl;

	return 0;
}
