// 가장 큰 정사각형
// dp
#include <iostream>
#include <cstring>
#include <algorithm>

using namespace std;

#define MAX 1001

int n, m, ans;
int map[MAX][MAX];

int main() {

	scanf("%d %d", &n, &m);

	//초기화
	ans = 0;

	for (int i = 0; i <= n; i++) {
		memset(map[i], 0, sizeof(map[i]));
	}

	//입력
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= m; j++) {
			scanf("%1d", &map[i][j]);
		}
	}

	//구현
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= m; j++) {
			if (map[i][j] != 0) { //정사각형을 만들 가능성이 있는지 확인
				map[i][j] = min(min(map[i - 1][j], map[i - 1][j - 1]), map[i][j-1]) + 1; //(i, j) 위치에 있을 때 만들 수 있는 최대 정사각형 길이 저장
				ans = max(ans, map[i][j]);
			}
		}
	}

	printf("%d\n", ans*ans); //넓이 출력

	return 0;
}
